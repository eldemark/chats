
1. Server Configuration

A. Install Necessary Packages

First, ensure that your server has the necessary packages for NFS and LDAP.

  sudo dnf install nfs-utils openldap-servers openldap-clients

B. Configure NFS

  1. Create Home Directories:

     sudo mkdir -p /srv/nfs/home

  2. Edit Exports File:

     Edit the /etc/exports file to include the home directory export:

     /srv/nfs/home 192.168.1.0/24(rw,sync,no_root_squash,no_subtree_check)

  3. Export the NFS Directory:

     sudo exportfs -a
     sudo systemctl enable --now nfs-server

C. Configure LDAP

  1. Install and Configure LDAP Server:

     sudo dnf install openldap-servers openldap-clients
     sudo systemctl enable --now slapd

  2. Configure LDAP:

     sudo systemctl start slapd
     sudo systemctl enable slapd

  3. Add LDAP Schema for POSIX:

     sudo ldapadd -Y EXTERNAL -H ldapi:/// -f /etc/openldap/schema/cosine.ldif
     sudo ldapadd -Y EXTERNAL -H ldapi:/// -f /etc/openldap/schema/nis.ldif
     sudo ldapadd -Y EXTERNAL -H ldapi:/// -f /etc/openldap/schema/inetorgperson.ldif

  4. Create Base LDAP Entries:

     Create a file base.ldif with your domain and base DN information:

     dn: dc=example,dc=com
     objectClass: top
     objectClass: dcObject
     objectClass: organization
     o: Example Organization
     dc: example

     dn: ou=People,dc=example,dc=com
     objectClass: organizationalUnit
     ou: People

     dn: ou=Groups,dc=example,dc=com
     objectClass: organizationalUnit
     ou: Groups

     Add the base entries:

     ldapadd -x -D cn=admin,dc=example,dc=com -W -f base.ldif

  5. Add User and Group Entries:

     Create users and groups as needed in LDAP.

2. Client Configuration

A. Install Necessary Packages

    Install the necessary packages on all clients:

    sudo dnf install nfs-utils openldap-clients authconfig

B. Configure LDAP Client

  1. Configure LDAP Authentication:

     sudo authconfig --enableldap --enableldapauth --ldapserver=ldap://server_ip --ldapbasedn="dc=example,dc=com" --enablemkhomedir --update


  2. Update NSS and PAM Configuration:

     Edit /etc/nsswitch.conf to use LDAP for authentication:

     passwd:         files sss ldap
     group:          files sss ldap
     shadow:         files sss ldap

     Ensure the PAM configuration is updated to create home directories on login:

     echo "session required pam_mkhomedir.so skel=/etc/skel umask=0022" | sudo tee -a /etc/pam.d/system-auth

C. Mount NFS Home Directories

   1. Edit /etc/fstab:

   Add the following line to mount the NFS home directory:

   server_ip:/srv/nfs/home  /home  nfs  defaults  0  0

  2. Mount NFS Manually:

     sudo mount -a

3. Network Configuration

Assign static IP addresses to all machines, ensuring they fall within the same subnet.
This can be done by editing the network configuration files in
/etc/sysconfig/network-scripts/ for each interface.

Example /etc/sysconfig/network-scripts/ifcfg-eth0:

  TYPE=Ethernet
  BOOTPROTO=static
  NAME=eth0
  DEVICE=eth0
  ONBOOT=yes
  IPADDR=192.168.1.x
  PREFIX=24
  GATEWAY=192.168.1.1
  DNS1=192.168.1.1

4. Testing

  1. Verify LDAP Authentication:

  Test that users can authenticate using their LDAP credentials.

  getent passwd username

  2. Verify NFS Mount:

  Ensure the home directory is correctly mounted from the server.

  ls /home

Creating users in an LDAP directory involves defining user entries in an LDIF (LDAP Data Interchange Format) file and then importing this file into your LDAP directory. Below are the steps to create users in LDAP:

Create User Entries in LDAP
Define User Entries:
Create an LDIF file (e.g., users.ldif) with the details of the users you want to add. Here is an example of how to define a user entry:

ldif
Copy code
dn: uid=jdoe,ou=People,dc=example,dc=com
objectClass: inetOrgPerson
objectClass: posixAccount
objectClass: shadowAccount
cn: John Doe
sn: Doe
givenName: John
uid: jdoe
uidNumber: 10000
gidNumber: 10000
homeDirectory: /home/jdoe
loginShell: /bin/bash
gecos: John Doe
userPassword: {SSHA}password_hash
Explanation of the Fields:

dn: The distinguished name of the entry. This uniquely identifies the entry in the LDAP directory.
objectClass: Defines the type of object (e.g., inetOrgPerson, posixAccount, shadowAccount).
cn: Common name.
sn: Surname.
givenName: Given name.
uid: User ID.
uidNumber: Numeric user ID.
gidNumber: Numeric group ID.
homeDirectory: Path to the user's home directory.
loginShell: Path to the user's login shell.
gecos: General information about the user.
userPassword: The user's password, hashed for security.
Generate a Password Hash:
Generate a hashed password for the userPassword attribute. You can use slappasswd to generate a password hash:

bash
Copy code
slappasswd
Enter the password when prompted, and it will return a hashed password. Use this hash in the userPassword field in your LDIF file.

Add the User Entries to LDAP:
Use the ldapadd command to add the user entries to the LDAP directory. Make sure you have the correct admin credentials and base DN.

bash
Copy code
ldapadd -x -D "cn=admin,dc=example,dc=com" -W -f users.ldif
You will be prompted to enter the LDAP admin password.

Example LDIF File with Multiple Users
Here is an example users.ldif file with two users:

ldif
Copy code
dn: uid=jdoe,ou=People,dc=example,dc=com
objectClass: inetOrgPerson
objectClass: posixAccount
objectClass: shadowAccount
cn: John Doe
sn: Doe
givenName: John
uid: jdoe
uidNumber: 10000
gidNumber: 10000
homeDirectory: /home/jdoe
loginShell: /bin/bash
gecos: John Doe
userPassword: {SSHA}password_hash_for_jdoe

dn: uid=asmith,ou=People,dc=example,dc=com
objectClass: inetOrgPerson
objectClass: posixAccount
objectClass: shadowAccount
cn: Alice Smith
sn: Smith
givenName: Alice
uid: asmith
uidNumber: 10001
gidNumber: 10000
homeDirectory: /home/asmith
loginShell: /bin/bash
gecos: Alice Smith
userPassword: {SSHA}password_hash_for_asmith
Create Group Entries in LDAP
Similarly, you can define groups in an LDIF file and import them into LDAP. Here is an example of how to create a group:

ldif
Copy code
dn: cn=staff,ou=Groups,dc=example,dc=com
objectClass: posixGroup
cn: staff
gidNumber: 10000
memberUid: jdoe
memberUid: asmith
Import Group Entries
Add the group entries to LDAP using the ldapadd command:

bash
Copy code
ldapadd -x -D "cn=admin,dc=example,dc=com" -W -f groups.ldif
Summary
To create users in LDAP:

Define user entries in an LDIF file.
Generate password hashes.
Use the ldapadd command to import the user entries into the LDAP directory.
These steps will ensure that users are correctly added to the LDAP directory and can authenticate against it.

Yes, using LDAP to manage users and authentication takes the place of the usual way of adding users directly on each individual Linux system. With LDAP, user information is centralized in the LDAP directory, and clients authenticate against this centralized directory. This approach provides several advantages, such as:

Centralized Management: User accounts and authentication information are stored in one place, making it easier to manage large numbers of users across many systems.
Consistency: Users have the same credentials and home directories regardless of which client machine they log into.
Scalability: Adding, modifying, or deleting users can be done centrally without needing to update each individual system.
Traditional vs. LDAP-based User Management
Traditional User Management
In traditional user management, you add users directly on each Linux system using commands like useradd, passwd, and usermod. For example:

bash
Copy code
sudo useradd -m -s /bin/bash jdoe
sudo passwd jdoe
This creates a local user with a home directory on that specific system.

LDAP-based User Management
With LDAP-based user management, you add users to the LDAP directory instead of each individual system. These users then authenticate against the LDAP directory, and their home directories are typically mounted via NFS or another network file system.

Steps for LDAP-based User Management
Add Users to LDAP:
Create an LDIF file for each user or multiple users as shown in the previous example, and then import it into the LDAP directory using the ldapadd command.

Configure LDAP Client on Each System:
Ensure each client system is configured to authenticate against the LDAP server. This includes configuring nsswitch.conf and PAM as described earlier.

Mount NFS Home Directories:
Ensure that home directories are available on all client systems by configuring NFS mounts.

Example Workflow
Create User in LDAP:
Define the user in an LDIF file (jdoe.ldif):

ldif
Copy code
dn: uid=jdoe,ou=People,dc=example,dc=com
objectClass: inetOrgPerson
objectClass: posixAccount
objectClass: shadowAccount
cn: John Doe
sn: Doe
givenName: John
uid: jdoe
uidNumber: 10000
gidNumber: 10000
homeDirectory: /home/jdoe
loginShell: /bin/bash
gecos: John Doe
userPassword: {SSHA}password_hash
Import the user:

bash
Copy code
ldapadd -x -D "cn=admin,dc=example,dc=com" -W -f jdoe.ldif
Configure LDAP Client:
Ensure the client system is configured to use LDAP for user information and authentication.

Verify User on Client:
Check that the user can log in on the client system:

bash
Copy code
su - jdoe
Summary
Using LDAP for user management centralizes user information and authentication, replacing the need to add users on each individual system. This method is especially beneficial in environments with many users and multiple systems, as it simplifies management and ensures consistency across the network.
